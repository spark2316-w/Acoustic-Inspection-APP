import streamlit as st
import numpy as np
import soundfile as sf
import librosa
import matplotlib.pyplot as plt
import io

THRESHOLD_FREQ = 376  
MAX_ALLOWED_AMPLITUDE = 100

def analyze_fft(y, sr):
    y = y / np.max(np.abs(y))  # Normalize

    N = len(y)
    window = np.hamming(N)
    y_windowed = y * window

    Y = np.fft.fft(y_windowed)
    frequencies = np.fft.fftfreq(N, d=1/sr)

    half = N // 2
    magnitudes = np.abs(Y[:half])
    frequencies = frequencies[:half]

    peak_idx = np.argmax(magnitudes)
    peak_freq = frequencies[peak_idx]
    peak_amp = magnitudes[peak_idx]

    st.write(f"\nЁЯОп **Peak Frequency:** {peak_freq:.2f} Hz")
    st.write(f"ЁЯУИ **Peak Amplitude:** {peak_amp:.2f}")

    if peak_amp > MAX_ALLOWED_AMPLITUDE:
        st.error("тЪая╕П р╣Ар╕кр╕╡р╕вр╕Зр╕Фр╕▒р╕Зр╣Ар╕Бр╕┤р╕Щр╣Др╕Ы р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣Мр╣Др╕Фр╣Й")
    elif not (376 <= peak_freq <= 401):
        st.warning("ЁЯЯе р╕зр╕▒р╕кр╕Фр╕╕р╣Ар╕кр╕╡р╕в")
    else:
        st.success("тЬЕ р╕зр╕▒р╕кр╕Фр╕╕р╕Фр╕╡")

    plt.figure(figsize=(10, 4))
    plt.plot(frequencies, magnitudes)
    plt.axvspan(376, 401, color='yellow', alpha=0.3, label='р╕зр╕▒р╕кр╕Фр╕╕р╕Фр╕╡ (8600тАУ8800 Hz)')
    plt.title(f"FFT Spectrum (Peak = {peak_freq:.2f} Hz)")
    plt.xlabel("Frequency (Hz)")
    plt.ylabel("Magnitude")
    plt.grid(True)
    plt.tight_layout()
    plt.legend()
    st.pyplot(plt)

# ЁЯСЗ р╕кр╣Ир╕зр╕Щ UI
st.title("ЁЯОЩя╕П р╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣Мр╕зр╕▒р╕кр╕Фр╕╕р╕Фр╣Йр╕зр╕вр╣Ар╕кр╕╡р╕вр╕З")

st.subheader("ЁЯУд р╕зр╕┤р╕Шр╕╡р╣Ар╕ер╕╖р╕нр╕Бр╣Ар╕кр╕╡р╕вр╕З:")
mode = st.radio("р╣Ар╕ер╕╖р╕нр╕Бр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╣Ар╕кр╕╡р╕вр╕Зр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣М", ["ЁЯОз р╕нр╕▒р╕Фр╣Ар╕кр╕╡р╕вр╕Зр╣Гр╕лр╕бр╣И", "ЁЯУБ р╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Фр╣Др╕Яр╕ер╣М (.wav, .mp3, .m4a)"])

audio_data = None
sr = 44100

if mode == "ЁЯОз р╕нр╕▒р╕Фр╣Ар╕кр╕╡р╕вр╕Зр╣Гр╕лр╕бр╣И":
    audio_bytes = st.audio_input("р╕Бр╕Фр╕Ыр╕╕р╣Ир╕бр╣Ар╕Юр╕╖р╣Ир╕нр╕нр╕▒р╕Фр╣Ар╕кр╕╡р╕вр╕З")
    if audio_bytes:
        with st.spinner("р╕нр╣Ир╕▓р╕Щр╣Др╕Яр╕ер╣М..."):
            audio_buffer = io.BytesIO(audio_bytes.getvalue())
            y, sr = sf.read(audio_buffer)
            if y.ndim > 1:
                y = y[:, 0]  # mono
            audio_data = y

elif mode == "ЁЯУБ р╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Фр╣Др╕Яр╕ер╣М (.wav)":
    uploaded_file = st.file_uploader("р╕ер╕▓р╕Бр╣Др╕Яр╕ер╣Мр╕бр╕▓р╕зр╕▓р╕З р╕лр╕гр╕╖р╕нр╣Ар╕ер╕╖р╕нр╕Бр╣Др╕Яр╕ер╣Мр╣Ар╕кр╕╡р╕вр╕З", type=["wav"])
    if uploaded_file:
        with st.spinner("р╕Бр╕│р╕ер╕▒р╕Зр╣Вр╕лр╕ер╕Фр╣Др╕Яр╕ер╣М..."):
            y, sr = librosa.load(uploaded_file, sr=44100)
            audio_data = y

# тЬЕ р╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣Мр╕Цр╣Йр╕▓р╕бр╕╡р╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕кр╕╡р╕вр╕З
if audio_data is not None:
    st.success("тЬЕ р╣Вр╕лр╕ер╕Фр╣Ар╕кр╕╡р╕вр╕Зр╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕в р╕Бр╕│р╕ер╕▒р╕Зр╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣М...")
    analyze_fft(audio_data, sr)
